name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run tests and capture results
        run: |
          mkdir -p test-results
          npm run check > test-results/test-output.txt 2>&1 || echo "Tests completed"

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/

  deploy:
    needs: test
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          name: test-results
          path: ./test-results

      - name: Display test results
        run: |
          echo "=== Test Results ==="
          cat ./test-results/test-output.txt

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Deploy application
        shell: pwsh
        run: |
          Write-Host "🛑 Stopping existing app..."
          Get-Process node -ErrorAction SilentlyContinue | Where-Object { $_.Path -like "*server.js*" } | Stop-Process -Force

          Write-Host "🚀 Starting application..."
          Start-Process "node" -ArgumentList "src/server.js" -NoNewWindow -RedirectStandardOutput "app.log" -RedirectStandardError "app.log"

          Start-Sleep -Seconds 5
          Write-Host "📄 Last 20 lines of app.log:"
          Get-Content "app.log" -Tail 20

          Write-Host "🔍 Checking if app is running..."
          $running = Get-Process node -ErrorAction SilentlyContinue | Where-Object { $_.Path -like "*server.js*" }
          if ($running) {
            Write-Host "✅ Application deployed successfully"
          } else {
            Write-Host "❌ Deployment failed: src/server.js is not running"
            exit 1
          }
